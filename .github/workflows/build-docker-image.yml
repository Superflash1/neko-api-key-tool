name: Build and Push Docker Image

on:
  push:
    branches:
      - test # 当代码推送到 test 分支时触发此工作流

env:
  # 定义镜像名称，请替换为你的 Docker Hub 用户名和镜像名
  DOCKER_IMAGE_NAME: yanghongming2000/neko-api-key-tool
  # 定义环境变量（可以在这里修改配置）
  REACT_APP_BASE_URL: '{"server1": "https://www.xidian-ai.work"}'
  REACT_APP_SHOW_DETAIL: true
  REACT_APP_SHOW_BALANCE: true
  REACT_APP_SHOW_ICONGITHUB: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest # 在最新的 Ubuntu 虚拟机上运行

    steps:
      - name: Checkout code # 步骤1: 检出仓库代码
        uses: actions/checkout@v4

      - name: Log in to Docker Hub # 步骤2: 登录 Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }} # 使用 GitHub Secrets 中的用户名
          password: ${{ secrets.DOCKER_PASSWORD }} # 使用 GitHub Secrets 中的密码 (Access Token)

      - name: Build and push Docker image # 步骤3: 构建并推送 Docker 镜像
        uses: docker/build-push-action@v5
        with:
          context: . # Dockerfile 的上下文路径，. 表示当前仓库的根目录
          file: ./Dockerfile # Dockerfile 的路径
          push: true # 构建完成后推送镜像到仓库
          build-args: |
            REACT_APP_BASE_URL=${{ env.REACT_APP_BASE_URL }}
            REACT_APP_SHOW_DETAIL=${{ env.REACT_APP_SHOW_DETAIL }}
            REACT_APP_SHOW_BALANCE=${{ env.REACT_APP_SHOW_BALANCE }}
            REACT_APP_SHOW_ICONGITHUB=${{ env.REACT_APP_SHOW_ICONGITHUB }}
          tags: |
            ${{ env.DOCKER_IMAGE_NAME }}:test
            ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
          # 上面两行是实际的标签定义，下面的注释是给 YAML 文件看的，而不是标签的一部分
          # ${{ env.DOCKER_IMAGE_NAME }}:latest 是最新版本标签
          # ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }} 是使用 commit SHA 作为标签，方便版本追溯  
